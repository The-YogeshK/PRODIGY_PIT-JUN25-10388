import pandas as pd
import numpy as np
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("customers.csv")

X = df[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']]
scaled = StandardScaler().fit_transform(X)

wcss = []
for i in range(1, 11):
    km = KMeans(n_clusters=i, init='k-means++', random_state=42, n_init=10)
    km.fit(scaled)
    wcss.append(km.inertia_)

plt.figure(figsize=(7, 4))
plt.plot(range(1, 11), wcss, marker='o', linestyle='--', color='purple')
plt.title("Elbow Method for Optimal Clusters")
plt.xlabel("K")
plt.ylabel("WCSS")
plt.tight_layout()
plt.show()

kmeans = KMeans(n_clusters=5, init='k-means++', random_state=42, n_init=10)
clusters = kmeans.fit_predict(scaled)
X['Cluster'] = clusters

plt.figure(figsize=(7, 5))
sns.scatterplot(x='Annual Income (k$)', y='Spending Score (1-100)', hue='Cluster', data=X, palette='Set1', s=90)
plt.title("Income vs Spending (Clustered)")
plt.tight_layout()
plt.show()

plt.figure(figsize=(7, 5))
sns.scatterplot(x='Age', y='Spending Score (1-100)', hue='Cluster', data=X, palette='Set2', s=90)
plt.title("Age vs Spending (Clustered)")
plt.tight_layout()
plt.show()

plt.figure(figsize=(7, 5))
sns.scatterplot(x='Age', y='Annual Income (k$)', hue='Cluster', data=X, palette='Set3', s=90)
plt.title("Age vs Income (Clustered)")
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 5))
sns.pairplot(X, hue='Cluster', palette='husl', height=2.2)
plt.suptitle("Pairwise Plots of Clusters", y=1.02)
plt.show()
